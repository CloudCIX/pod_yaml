user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    # include /etc/nginx/conf.d/*.conf;

    upstream elasticsearch {
        server elasticsearch:9200;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  elasticsearch.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://elasticsearch;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream kibana {
        server kibana:5601;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  kibana.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://kibana;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream logstash {
        server logstash:9600;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  logstash.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://logstash;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream jaeger {
        server jaeger:16686;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  jaeger.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://jaeger;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  influx.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://influxdb;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream grafana {
        server grafana:3000;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  grafana.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://grafana;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream sentry {
        server sentry_onpremise_nginx_1:9000;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  sentry.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://sentry_onpremise_nginx_1;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream daedalus {
        server daedalus:80;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  daedalus.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://daedalus;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }

    upstream icarus {
        server icarus:80;
    }

    server {
        listen       443 ssl;
        # listen  [::]:443 ssl;
        server_name  icarus.${POD_NAME}.${ORGANIZATION_URL};

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://icarus;
        }
        ssl_certificate /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/${POD_NAME}.${ORGANIZATION_URL}/privkey.pem;
    }
}