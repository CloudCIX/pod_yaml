version: '3'

networks:
   mgmt:
      driver: bridge
      enable_ipv6: true
      ipam:
         config:
            - subnet: "${IP6}d0c:0:1/96"
              gateway: "${IP6}d0c:0:1"
   oob:
      driver: macvlan
      driver_opts:
         parent: ${OOB_INTERFACE}
      ipam:
         config:
            - subnet: "10.${pod_id}.0.0/16"
              ip_range: "10.${pod_id}.0.0/24"
              gateway: "10.${pod_id}.0.1"

services:
   # Opensource
   pgsqlpam:
      image: cloudcix/pgsqlpam:latest
      container_name: pgsqlpam
      networks:
         mgmt:
         oob:
            ipv4_address: "10.${pod_id}.0.7"
      environment:
         - POSTGRES_PASSWORD=${PGSQLPAM_PASSWORD}
         - POSTGRES_USER=${PGSQLPAM_USER}
      volumes:
         - /var/lib/pgsqlpam:/var/lib/postgresql/data/

   pgadminpam:
      image: dpage/pgadmin4
      container_name: pgadminpam
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:1"
      environment:
         - PGADMIN_DEFAULT_EMAIL=${PGADMINPAM_EMAIL}
         - PGADMIN_DEFAULT_PASSWORD=${PGADMINPAM_PASSWORD}
      depends_on:
         - pgsqlpam

   pam:
      image: cloudcix/pam:latest
      container_name: pam
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:4"
         oob:
            ipv4_address: "10.${pod_id}.0.6"
      environment:
         - PGSQLPAM_PASSWORD=${PGSQLPAM_PASSWORD}
         - PGSQLPAM_USER=${PGSQLPAM_USER}
         - POD_SECRET_KEY=${POD_SECRET_KEY}
         - ROUTER_MANAGEMENT_IP=${ROUTER_MANAGEMENT_IP}
         - ROUTER_PUBLIC_INTERFACE=${ROUTER_PUBLIC_INTERFACE}
         - VPN_PAM_PUBLIC_ADDRESS=${VPN_PAM_PUBLIC_ADDRESS}
      volumes:
         - pam_static_volume:/app/_static
         - /etc/cloudcix/docker/ssl_certs:/ssl_certs
      depends_on:
         - pgsqlpam
      restart: on-failure

   librenms:
      image: librenms/librenms
      container_name: librenms
      networks:
         mgmt:
         oob:
            ipv4_address: "10.${pod_id}.0.4"
      environment:
         - DB_HOST=mysql
         - DB_NAME=${MYSQL_DATABASE}
         - DB_PASSWORD=${MYSQL_PASSWORD}
         - DB_USER=${MYSQL_USER}

      depends_on:
         - mysql

   mysql:
      image: mysql
      container_name: mysql
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3001:5"
      environment:
         - MYSQL_DATABASE=${MYSQL_DATABASE}
         - MYSQL_PASSWORD=${MYSQL_PASSWORD}
         - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
         - MYSQL_USER=${MYSQL_USER}
      volumes:
         - "/etc/cloudcix/docker/radius/data:/var/lib/mysql"
         - "/etc/cloudcix/docker/radius/radius.sql:/docker-entrypoint-initdb.d/radius.sql"
      command: --default-authentication-plugin=mysql_native_password
      restart: always


   radius:
      image: 2stacks/freeradius
      container_name: radius
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3004:6"
         oob:
            ipv4_address: "10.${pod_id}.0.3"
      environment:
         - DB_HOST=mysql
         - DB_NAME=${MYSQL_DATABASE}
         - DB_PASS=${MYSQL_PASSWORD}
         - DB_USER=${MYSQL_USER}
         - RAD_CLIENTS=10.0.0.0/8
         - RADIUS_KEY=${RADIUS_SECRET_KEY}
      depends_on:
         - mysql
      links:
         - mysql
      restart: always

   mysql-workbench:
      image: ghcr.io/linuxserver/mysql-workbench
      container_name: mysql-workbench
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:2"
         oob:
            ipv4_address: "10.${pod_id}.0.8"
      environment:
         - PGID=1000
         - PUID=1000
         - TZ=Europe/Dublin
      cap_add:
         - IPC_LOCK
      restart: unless-stopped

   jumphost:
      image: cloudcix/jumphost:latest
      container_name: jumphost
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:3"
         oob:
            ipv4_address: "10.${pod_id}.0.5"
      environment:
         - HTTP_PASSWORD=${JUMPHOST_HTTP_PASSWORD}
         - PASSWORD=${JUMPHOST_PASSWORD}
         - RESOLUTION=1280x720
         - USER=${JUMPHOST_USERNAME}
         - VNC_PASSWORD=${JUMPHOST_VNC_PASSWORD}
      restart: always

   # Closedsource
   # ELK & Jaeger
   elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
      container_name: elasticsearch
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3001:2"
      environment:
         - cluster.name=docker-cluster
         - bootstrap.memory_lock=true
         - discovery.type=single-node
         - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
         - MAX_MAP_COUNT=262144
      ulimits:
         memlock:
            soft: -1
            hard: -1
      volumes:
         - /docker/elastic/data:/usr/share/elasticsearch/data
      ports:
         - 9200:9200

   kibana:
      image: docker.elastic.co/kibana/kibana:7.13.4
      container_name: kibana
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:9"
      ports:
         - 5601:5601
      environment:
         ELASTICSEARCH_URL: http://elasticsearch:9200
         ELASTICSEARCH_HOSTS: http://elasticsearch:9200

   logstash:
      image: docker.elastic.co/logstash/logstash:7.13.4
      container_name: logstash
      networks:
         mgmt:
      environment:
         - xpack.monitoring.enabled=true
         - xpack.monitoring.elasticsearch.url=http://elasticsearch:9200
      ports:
         - 9600:9600
      volumes:
         - /docker/logstash/conf:/usr/share/logstash/pipeline
   
   jaeger-collector:
      image: jaegertracing/jaeger-collector:latest
      container_name: jaeger-collector
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3003:2"
      command: []
      environment:
         SPAN_STORAGE_TYPE: elasticsearch
         ES_NUM_REPLICAS: 0
         ES_NUM_SHARDS: 1
         ES_SERVER_URLS: http://elasticsearch:9200
      ports:
         - 14268:14268
         - 9411:9411
      restart: on-failure

   jaeger:
      image: jaegertracing/jaeger-query:latest
      container_name: jaeger
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:10"
      command: []
      environment:
         SPAN_STORAGE_TYPE: elasticsearch
         ES_SERVER_URLS: http://elasticsearch:9200
      ports:
         - 16685:16685
         - 16685:16685
         - 16686:16686
      restart: on-failure

   # Grafana
   influxdb:
      image: influxdb:latest
      container_name: influxdb
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3003:1"
      environment:
         - INFLUXDB_DB=db0
         - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
         - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
      ports:
         - '8086:8086'
      volumes:
         - influxdb-storage:/var/lib/influxdb

   grafana:
      image: grafana/grafana:latest
      container_name: grafana
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:8"
      environment:
         - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN}
         - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PW}
      ports:
         - '3000:3000'
      volumes:
         - grafana-storage:/var/lib/grafana
         - ./grafana-provisioning/:/etc/grafana/provisioning
      depends_on:
         - influxdb

   # Icarus
   daedalus:
      image: cloudcix/daedalus:latest
      container_name: daedalus
      depends_on:
         - pgsqlpam
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:7"
      environment:
         - POSTGRES_PASSWORD=${PGSQLPAM_PASSWORD}
         - POSTGRES_USER=${PGSQLPAM_USER}
         - POD_SECRET_KEY=${POD_SECRET_KEY}
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost/regions/"]
         interval: 10s
         timeout: 5s
         retries: 5

   majora:
      image: cloudcix/majora:latest
      container_name: majora
      networks:
         mgmt:
      depends_on:
         - daedalus
         - nginxpam

   icarus:
      image: cloudcix/icarus:latest
      container_name: icarus
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3002:6"
      depends_on:
         - daedalus

   # NGINX
   nginxpam:
      image: nginx:1.19.2-alpine
      container_name: nginxpam
      networks:
         mgmt:
            ipv6_address: "${IP6}d0c:3004:a"
      environment:
         - POD_NAME=${POD_NAME}
         - ORGANIZATION_URL=${ORGANIZATION_URL}
      volumes:
         - ./templates/pam:/etc/nginx/templates
         - /etc/nginx/certs:/etc/nginx/certs
         - pam_static_volume:/app/_static
      depends_on:
         - daedalus
         - elasticsearch
         - grafana
         - icarus
         - influxdb
         - jaeger
         - kibana
         - logstash
         - pam

volumes:
   # pam volumes
   influxdb-storage:
   grafana-storage:
   pam_static_volume:
